name: 'Terraform'

on: workflow_dispatch

env:
  AWS_REGION: 'ap-northeast-2'
  WORKING_DIR: './terraform'
  EC2_INSTANCE_NAME: 'kakao-friend-list-server'
  EC2_KEY_PAIR_NAME: 'terraform_key_pair'

jobs:
  terraform:
    name: 'Terraform'
    runs-on: ubuntu-latest
    # environment: production

    defaults:
      run:
        shell: bash

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ env.AWS_REGION }}

      - name: Check for existing EC2 instance
        id: check-instance
        run: |
          INSTANCE_ID=$(aws ec2 describe-instances --filters "Name=tag:Name,Values=${{ env.EC2_INSTANCE_NAME }}" --query "Reservations[*].Instances[*].InstanceId" --output text)
          echo "INSTANCE_EXISTS=${INSTANCE_ID}" >> $GITHUB_OUTPUT

      - name: Check EC2 Key Pair Existence
        id: check_key
        run: |
          if aws ec2 describe-key-pairs --key-names "${{ env.EC2_KEY_PAIR_NAME }}" >/dev/null 2>&1; then
            echo "Key pair exists."
            echo "KEY_PARI_EXISTS=true" >> $GITHUB_OUTPUT            
          else
            echo "Key pair does not exist."            
            echo "KEY_PARI_EXISTS=false" >> $GITHUB_OUTPUT
          fi

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v3

      - name: Terraform Init
        run: terraform init
        working-directory: ${{ env.WORKING_DIR }}

      - name: Terraform Format
        run: terraform fmt -check
        working-directory: ${{ env.WORKING_DIR }}

      - name: Terraform Validate
        if: success() || failure()
        run: terraform validate -no-color
        working-directory: ${{ env.WORKING_DIR }}

      - name: Terraform Plan
        if: steps.check-instance.outputs.INSTANCE_EXISTS == ''
        run: terraform plan -no-color -var="ec2_instance_name=${{ env.EC2_INSTANCE_NAME }}"
        working-directory: ${{ env.WORKING_DIR }}

      - name: Terraform Apply
        if: steps.check-instance.outputs.INSTANCE_EXISTS == ''
        run: terraform apply -auto-approve -var="ec2_instance_name=${{ env.EC2_INSTANCE_NAME }}"
        working-directory: ${{ env.WORKING_DIR }}
