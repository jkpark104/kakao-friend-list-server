name: 'Terraform'

on: workflow_dispatch

env:
  AWS_REGION: 'ap-northeast-2'
  WORKING_DIR: './terraform'

jobs:
  terraform:
    name: 'Terraform'
    runs-on: ubuntu-latest
    # environment: production

    defaults:
      run:
        shell: bash

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ env.AWS_REGION }}

      - name: Check for existing EC2 instance
        id: check-instance
        run: |
          INSTANCE_ID=$(aws ec2 describe-instances --filters "Name=tag:Name,Values=kakao-friend-list-server" --query "Reservations[*].Instances[*].InstanceId" --output text)
          echo "INSTANCE_EXISTS=${INSTANCE_ID}" >> $GITHUB_OUTPUT

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v3

      - name: Terraform Init
        run: terraform init
        working-directory: ${{ env.WORKING_DIR }}

      - name: Terraform Format
        run: terraform fmt -check
        working-directory: ${{ env.WORKING_DIR }}

      - name: Terraform Validate
        if: success() || failure()
        run: terraform validate -no-color
        working-directory: ${{ env.WORKING_DIR }}

      - name: Terraform Plan
        run: terraform plan -no-color
        working-directory: ${{ env.WORKING_DIR }}

      - name: Terraform Apply
        if: steps.check-instance.outputs.INSTANCE_EXISTS == ''
        run: terraform apply -auto-approve
        working-directory: ${{ env.WORKING_DIR }}
